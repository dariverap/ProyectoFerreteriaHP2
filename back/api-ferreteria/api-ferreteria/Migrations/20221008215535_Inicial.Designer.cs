// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_ferreteria;

namespace api_ferreteria.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221008215535_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("api_ferreteria.Entitys.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("numdocumento")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Comprobante", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("clienteid")
                        .HasColumnType("int");

                    b.Property<int?>("documentoid")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("formapagoid")
                        .HasColumnType("int");

                    b.Property<decimal>("igv")
                        .HasColumnType("decimal(20,2)");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("usuarioid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("clienteid");

                    b.HasIndex("documentoid");

                    b.HasIndex("formapagoid");

                    b.HasIndex("usuarioid");

                    b.ToTable("Comprobante");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Detalle", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("comprobanteid")
                        .HasColumnType("int");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(20,2)");

                    b.Property<int?>("productoid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("comprobanteid");

                    b.HasIndex("productoid");

                    b.ToTable("Detalle");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Documento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("Documento");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Empleado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("rolid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("rolid");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.FormaPago", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("FormaPago");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("categoriaid")
                        .HasColumnType("int");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(20,2)");

                    b.HasKey("id");

                    b.HasIndex("categoriaid");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("empleadoid")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("pregunta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("respuesta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("empleadoid");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Comprobante", b =>
                {
                    b.HasOne("api_ferreteria.Entitys.Cliente", "cliente")
                        .WithMany("comprobante")
                        .HasForeignKey("clienteid");

                    b.HasOne("api_ferreteria.Entitys.Documento", "documento")
                        .WithMany("comprobante")
                        .HasForeignKey("documentoid");

                    b.HasOne("api_ferreteria.Entitys.FormaPago", "formapago")
                        .WithMany("comprobante")
                        .HasForeignKey("formapagoid");

                    b.HasOne("api_ferreteria.Entitys.Usuario", "usuario")
                        .WithMany("comprobante")
                        .HasForeignKey("usuarioid");

                    b.Navigation("cliente");

                    b.Navigation("documento");

                    b.Navigation("formapago");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Detalle", b =>
                {
                    b.HasOne("api_ferreteria.Entitys.Comprobante", "comprobante")
                        .WithMany("detalle")
                        .HasForeignKey("comprobanteid");

                    b.HasOne("api_ferreteria.Entitys.Producto", "producto")
                        .WithMany("detalle")
                        .HasForeignKey("productoid");

                    b.Navigation("comprobante");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Empleado", b =>
                {
                    b.HasOne("api_ferreteria.Entitys.Rol", "rol")
                        .WithMany("empleado")
                        .HasForeignKey("rolid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rol");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Producto", b =>
                {
                    b.HasOne("api_ferreteria.Entitys.Categoria", "categoria")
                        .WithMany("producto")
                        .HasForeignKey("categoriaid");

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Usuario", b =>
                {
                    b.HasOne("api_ferreteria.Entitys.Empleado", "empleado")
                        .WithMany()
                        .HasForeignKey("empleadoid");

                    b.Navigation("empleado");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Categoria", b =>
                {
                    b.Navigation("producto");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Cliente", b =>
                {
                    b.Navigation("comprobante");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Comprobante", b =>
                {
                    b.Navigation("detalle");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Documento", b =>
                {
                    b.Navigation("comprobante");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.FormaPago", b =>
                {
                    b.Navigation("comprobante");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Producto", b =>
                {
                    b.Navigation("detalle");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Rol", b =>
                {
                    b.Navigation("empleado");
                });

            modelBuilder.Entity("api_ferreteria.Entitys.Usuario", b =>
                {
                    b.Navigation("comprobante");
                });
#pragma warning restore 612, 618
        }
    }
}
